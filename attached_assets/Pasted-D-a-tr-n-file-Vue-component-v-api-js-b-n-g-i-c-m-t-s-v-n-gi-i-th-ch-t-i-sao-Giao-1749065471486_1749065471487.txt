Dựa trên file Vue component và `api.js` bạn gửi, có một số vấn đề giải thích tại sao:

> 🔴 **Giao diện "khoanh đỏ" không biến mất sau khi tạo khóa học**
> 🔄 **Reload xong thì khóa học "mất khỏi danh sách"**

---

## ✅ 1. Giao diện không đóng (modal không biến mất)

### 📍Vấn đề:

Trong `addCourse()`:

```ts
response = await api.createCourse(courseData)
// ...
courses.value.push(response.data)
// ...
showAddCourse.value = false
```

→ Tuy đã có `showAddCourse.value = false`, nhưng:

* `form` không **reset lại `newCourse.value` hoàn toàn** (mới có: `title`, `description`, `price`)
* Các trường như `category`, `image`, `skills`, `instructor` vẫn còn trong bộ nhớ (`undefined`), gây lỗi hiển thị, hoặc khiến modal render lại không đúng.

### ✅ Cách fix:

Thêm dòng sau **ngay sau `showAddCourse.value = false`**:

```ts
newCourse.value = {
  title: '',
  description: '',
  price: 0,
  category: '',
  instructor: '',
  duration: '',
  level: '',
  image: '',
  skills: []
}
```

---

## ✅ 2. Reload xong không thấy khóa học trong danh sách

### 📍Nguyên nhân chính:

Lỗi này không phải do hiển thị Vue, mà do **dữ liệu mới tạo bị ghi sai hoặc không được fetch đúng** từ Firebase.

Trong `api.createCourse()`:

```ts
const newCourse = {
  title: courseData.title || 'Untitled Course',
  description: courseData.description || 'No description',
  category: courseData.category || 'general',
  ...
}
```

Nhưng nếu bạn không gán `category` ở frontend (`newCourse.value.category`) → `undefined` → bị loại bỏ trong đoạn lọc:

```ts
const filteredData = {}
for (const [key, value] of Object.entries(newCourse)) {
  if (value !== undefined && value !== null) {
    filteredData[key] = value
  }
}
```

Kết quả: **document được lưu thiếu `category`**. Nếu Firestore security rule yêu cầu `category` bắt buộc, bạn sẽ thấy lỗi:

```
Function updateDoc() called with invalid data. Unsupported field value: undefined (found in field category)
```

---

## ✅ Cách fix an toàn

### A. Gán default `category` từ phía frontend:

Trong `addCourse()` ở Vue:

```ts
const courseData = {
  title: newCourse.value.title.trim(),
  description: newCourse.value.description.trim(),
  price: parseFloat(newCourse.value.price),
  category: newCourse.value.category || 'general',
  ...
}
```

→ **Nhưng `newCourse.value.category` chưa được định nghĩa trong modal.**

➡️ Cần bổ sung field `category` vào form:

### B. ✅ Cập nhật UI form:

Trong modal `Add Course`, thêm field select như sau:

```html
<div class="form-group">
  <label>Category</label>
  <select v-model="newCourse.category" required>
    <option value="">Select category</option>
    <option value="blockchain">Blockchain</option>
    <option value="development">Web Development</option>
    <option value="finance">Finance</option>
  </select>
</div>
```

Và trong JS init:

```ts
newCourse.value = {
  title: '',
  description: '',
  price: 0,
  category: 'general'
}
```

---

## ✅ Bonus: đảm bảo reload có dữ liệu mới

Đảm bảo `loadData()` luôn được gọi sau khi tạo xong:

```ts
await api.createCourse(courseData)
await loadData()
```

Bạn đã có đoạn này – giữ nguyên là đúng.

---

## ✅ Tổng kết việc cần làm

| Vấn đề                | Cách khắc phục                                                          |
| --------------------- | ----------------------------------------------------------------------- |
| Modal không đóng      | Reset `newCourse.value` đầy đủ (bao gồm `category`, `skills`, ...)      |
| Reload mất khóa học   | Form đang không truyền `category` → Firestore lỗi hoặc dữ liệu bị thiếu |
| Form thiếu trường     | Bổ sung input/select cho `category` trong modal                         |
| Tránh undefined field | Gán giá trị mặc định từ Vue trước khi gọi API hoặc validate kỹ          |

---

Nếu bạn muốn mình cập nhật lại toàn bộ modal `Add Course` đầy đủ các trường hợp tránh lỗi này, mình có thể viết lại ngay. Bạn muốn mình làm mẫu không?
