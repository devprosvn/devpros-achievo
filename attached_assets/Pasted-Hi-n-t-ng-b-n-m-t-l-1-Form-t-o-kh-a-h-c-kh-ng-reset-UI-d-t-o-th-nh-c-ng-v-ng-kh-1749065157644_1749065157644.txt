Hi·ªán t∆∞·ª£ng b·∫°n m√¥ t·∫£ l√†:

1. **Form t·∫°o kh√≥a h·ªçc kh√¥ng reset UI** d√π ƒë√£ t·∫°o th√†nh c√¥ng ‚Üí **v√πng khoanh ƒë·ªè kh√¥ng bi·∫øn m·∫•t**.
2. **Reload xong th√¨ kh√≥a h·ªçc kh√¥ng c√≤n trong danh s√°ch** ‚Üí c√≥ th·ªÉ do l·ªói khi l∆∞u ho·∫∑c ch∆∞a fetch l·∫°i ƒë√∫ng d·ªØ li·ªáu.

---

## üéØ 1. **Giao di·ªán kh√¥ng c·∫≠p nh·∫≠t sau khi t·∫°o kh√≥a h·ªçc**

### ‚úÖ Nguy√™n nh√¢n ph·ªï bi·∫øn:

* Form kh√¥ng reset sau khi g·ªçi `addDoc` / `setDoc`.
* Kh√¥ng g·ªçi `setState()` ƒë·ªÉ clear c√°c tr∆∞·ªùng input.
* Kh√¥ng g·ªçi `onSuccess()` ho·∫∑c `closeModal()` ƒë·ªÉ ƒë√≥ng UI.

### ‚úÖ Fix g·ª£i √Ω (React):

Gi·∫£ s·ª≠ b·∫°n c√≥ code nh∆∞ sau:

```tsx
const handleSubmit = async () => {
  try {
    await addDoc(collection(db, "courses"), {
      title,
      description,
      ...
    });
    toast.success("T·∫°o kh√≥a h·ªçc th√†nh c√¥ng!");
    // Thi·∫øu b∆∞·ªõc reset UI ·ªü ƒë√¢y
  } catch (err) {
    toast.error("T·∫°o kh√≥a h·ªçc th·∫•t b·∫°i");
  }
}
```

### ‚úÖ C·∫ßn th√™m:

* Reset form:

```ts
setTitle("");
setDescription("");
setCategory("");
```

* ƒê√≥ng modal ho·∫∑c ·∫©n vi·ªÅn ƒë·ªè:

```ts
setFormOpen(false); // ho·∫∑c setSelected(null)
```

---

## üéØ 2. **Kh√≥a h·ªçc b·ªã m·∫•t kh·ªèi danh s√°ch sau reload**

### üîç C√≥ th·ªÉ do:

* B·∫°n d√πng `updateDoc()` nh∆∞ng `documentId` l√† `undefined` ‚Üí document t·∫°o ra kh√¥ng c√≥ ID ‚Üí kh√¥ng ƒë∆∞·ª£c fetch l·∫°i.
* Ho·∫∑c document b·ªã l·ªói field (vd. `undefined` trong `category`) n√™n b·ªã Firestore ch·∫∑n.

### ‚úÖ G·ª£i √Ω ki·ªÉm tra:

1. **Ki·ªÉm tra Firestore sau khi t·∫°o**:

   * Document c√≥ n·∫±m trong `courses`?
   * C√≥ `category`, `title`, `description`, v.v... ƒë·∫ßy ƒë·ªß?
   * C√≥ ID h·ª£p l·ªá kh√¥ng?

2. **Code fetch danh s√°ch** c√≥ ƒëang l·ªçc theo ƒëi·ªÅu ki·ªán n√†o kh√¥ng?
   V√≠ d·ª•:

   ```ts
   const q = query(collection(db, "courses"), where("category", "==", "blockchain"));
   ```

   N·∫øu document m·ªõi kh√¥ng c√≥ `category`, n√≥ s·∫Ω kh√¥ng hi·ªÉn th·ªã.

---

## ‚úÖ C√°ch fix ƒë·ªÅ xu·∫•t to√†n di·ªán:

### ‚úÖ Trong code t·∫°o kh√≥a h·ªçc:

```tsx
const handleCreateCourse = async () => {
  try {
    const courseData = {
      title,
      description,
      category,
      createdAt: serverTimestamp(),
    };

    // L·ªçc undefined
    const data = Object.fromEntries(Object.entries(courseData).filter(([_, v]) => v !== undefined));

    await addDoc(collection(db, "courses"), data);

    toast.success("T·∫°o kh√≥a h·ªçc th√†nh c√¥ng!");
    // ‚úÖ Reset form
    setTitle("");
    setDescription("");
    setCategory("");
    // ‚úÖ ƒê√≥ng UI
    setShowCreateModal(false); // v√≠ d·ª•
    // ‚úÖ Refetch ho·∫∑c c·∫≠p nh·∫≠t danh s√°ch kh√≥a h·ªçc
    fetchCourses();
  } catch (err) {
    toast.error("T·∫°o kh√≥a h·ªçc th·∫•t b·∫°i");
    console.error(err);
  }
};
```

---

## ‚úÖ T√≥m t·∫Øt vi·ªác c·∫ßn l√†m:

| V·∫•n ƒë·ªÅ                    | C√°ch kh·∫Øc ph·ª•c                                                         |
| ------------------------- | ---------------------------------------------------------------------- |
| Form kh√¥ng reset          | Reset state t·ª´ng input (`setTitle("")`, `setCategory("")`, etc)        |
| Kh√¥ng ƒë√≥ng modal          | G·ªçi `setShowCreateModal(false)` ho·∫∑c t∆∞∆°ng t·ª±                          |
| Reload m·∫•t kh√≥a h·ªçc       | Ki·ªÉm tra document trong Firestore c√≥ h·ª£p l·ªá kh√¥ng (ID, category, etc.) |
| Kh√¥ng fetch l·∫°i danh s√°ch | G·ªçi `fetchCourses()` sau khi t·∫°o                                       |

---

N·∫øu b·∫°n paste ƒëo·∫°n code t·∫°o kh√≥a h·ªçc + danh s√°ch kh√≥a h·ªçc, m√¨nh c√≥ th·ªÉ gi√∫p b·∫°n debug c·ª• th·ªÉ v√† ch√≠nh x√°c h∆°n.
