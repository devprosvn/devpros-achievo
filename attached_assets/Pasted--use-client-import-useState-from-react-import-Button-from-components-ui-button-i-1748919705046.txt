"use client"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogFooter,
  DialogHeader,
  DialogTitle,
} from "@/components/ui/dialog"
import { Wallet, ArrowRight } from "lucide-react"

interface WalletConnectionModalProps {
  open: boolean
  onOpenChange: (open: boolean) => void
  onConnect: (walletType: string) => void
}

export function WalletConnectionModal({ open, onOpenChange, onConnect }: WalletConnectionModalProps) {
  const [connecting, setConnecting] = useState<string | null>(null)

  const handleConnect = (walletType: string) => {
    setConnecting(walletType)

    // Simulate connection process
    setTimeout(() => {
      setConnecting(null)
      onConnect(walletType)
      onOpenChange(false)
    }, 1500)
  }

  return (
    <Dialog open={open} onOpenChange={onOpenChange}>
      <DialogContent className="sm:max-w-md">
        <DialogHeader>
          <DialogTitle>Connect Wallet</DialogTitle>
          <DialogDescription>Choose a wallet to connect to the Achievo platform.</DialogDescription>
        </DialogHeader>
        <div className="grid gap-4 py-4">
          <Button
            variant="outline"
            className="flex items-center justify-between p-6"
            onClick={() => handleConnect("meteor")}
            disabled={!!connecting}
          >
            <div className="flex items-center gap-3">
              <div className="rounded-full bg-blue-100 p-2">
                <Wallet className="h-5 w-5 text-blue-600" />
              </div>
              <span className="font-medium">Meteor Wallet</span>
            </div>
            {connecting === "meteor" ? (
              <div className="h-5 w-5 animate-spin rounded-full border-2 border-blue-600 border-t-transparent" />
            ) : (
              <ArrowRight className="h-5 w-5 text-gray-400" />
            )}
          </Button>

          <Button
            variant="outline"
            className="flex items-center justify-between p-6"
            onClick={() => handleConnect("mynear")}
            disabled={!!connecting}
          >
            <div className="flex items-center gap-3">
              <div className="rounded-full bg-green-100 p-2">
                <Wallet className="h-5 w-5 text-green-600" />
              </div>
              <span className="font-medium">MyNearWallet</span>
            </div>
            {connecting === "mynear" ? (
              <div className="h-5 w-5 animate-spin rounded-full border-2 border-green-600 border-t-transparent" />
            ) : (
              <ArrowRight className="h-5 w-5 text-gray-400" />
            )}
          </Button>
        </div>
        <DialogFooter className="flex flex-col sm:justify-start">
          <div className="text-xs text-muted-foreground">
            By connecting your wallet, you agree to our Terms of Service and Privacy Policy.
          </div>
        </DialogFooter>
      </DialogContent>
    </Dialog>
  )
}
